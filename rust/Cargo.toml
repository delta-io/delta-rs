[package]
name = "deltalake"
version = "0.4.1"
authors = ["Qingping Hou <dave2008713@gmail.com>"]
homepage = "https://github.com/delta-io/delta.rs"
license = "Apache-2.0"
keywords = ["deltalake", "delta", "datalake"]
description = "Native Delta Lake implementation in Rust"
edition = "2021"

[dependencies]
libc = ">=0.2.90,<1"
errno = "0.2"
thiserror = "1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
tokio = { version = "1", features = ["fs", "macros", "rt", "io-util"] }
tokio-stream = { version = "0", features = ["fs"] }
futures = "0.3"
bytes = "1"
log = "0"
regex = "1"
chrono = "0"
uuid = { version = "1", features = ["serde", "v4"] }
lazy_static = "1"
percent-encoding = "2"

# HTTP Client
reqwest = { version = "0.11", default-features = false, features = [
    "rustls-tls",
    "stream",
], optional = true }

# Azure
azure_core = { version = "0.3", optional = true }
azure_storage = { version = "0.4", optional = true }
azure_storage_datalake = { version = "0.4", optional = true }
azure_identity = { version = "0.4", optional = true }

# S3
rusoto_core = { version = "0.48", default-features = false, optional = true }
rusoto_credential = { version = "0.48", optional = true }
rusoto_s3 = { version = "0.48", default-features = false, optional = true }
rusoto_sts = { version = "0.48", default-features = false, optional = true }
rusoto_dynamodb = { version = "0.48", default-features = false, optional = true }
maplit = { version = "1", optional = true }

# Glue
rusoto_glue = { version = "0.48", default-features = false, optional = true }

# GCS
tame-gcs = { version = "0.10.0", optional = true }
tame-oauth = { version = "0.4.0", features = ["gcp"], optional = true }
async-stream = { version = "0.3.2", default-features = true, optional = true }

# High-level writer
parquet-format = "~4.0.0"

arrow = "15"
parquet = "15"

crossbeam = { version = "0", optional = true }

cfg-if = "1"
async-trait = "0.1"

# NOTE: disable rust-dataframe integration since it currently doesn't have a
# version published in crates.io
# rust-dataframe = {version = "0.*", optional = true }

[dependencies.datafusion]
version = "9"
optional = true

[features]
rust-dataframe-ext = []
datafusion-ext = ["datafusion"]
azure = [
    "azure_core",
    "azure_storage",
    "azure_storage_datalake",
    "azure_identity",
    "reqwest",
]

s3 = [
    "rusoto_core/native-tls",
    "rusoto_credential",
    "rusoto_s3/native-tls",
    "rusoto_sts/native-tls",
    "rusoto_dynamodb/native-tls",
    "maplit",
    "dynamodb_lock/native-tls",
]
s3-rustls = [
    "rusoto_core/rustls",
    "rusoto_credential",
    "rusoto_s3/rustls",
    "rusoto_sts/rustls",
    "rusoto_dynamodb/rustls",
    "maplit",
    "dynamodb_lock/rustls",
]
gcs = ["async-stream", "tame-gcs", "tame-oauth", "reqwest"]
glue = ["s3", "rusoto_glue"]
python = ["arrow/pyarrow"]

[build-dependencies]
glibc_version = "0"

[dependencies.dynamodb_lock]
path = "../dynamodb_lock"
version = "0"
default-features = false
optional = true

[dev-dependencies]
utime = "0.3"
serial_test = "0"
pretty_assertions = "1"
tempdir = "0"
tempfile = "3"
maplit = { version = "1" }
anyhow = "1"
rand = "0.8"
