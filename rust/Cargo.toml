[package]
name = "deltalake"
version = "0.14.0"
rust-version = "1.64"
authors = ["Qingping Hou <dave2008713@gmail.com>"]
homepage = "https://github.com/delta-io/delta.rs"
license = "Apache-2.0"
keywords = ["deltalake", "delta", "datalake"]
description = "Native Delta Lake implementation in Rust"
documentation = "https://docs.rs/deltalake"
repository = "https://github.com/delta-io/delta.rs"
readme = "README.md"
edition = "2021"

[dependencies]
# arrow
arrow = { workspace = true, optional = true }
arrow-array = { workspace = true, optional = true }
arrow-buffer = { workspace = true, optional = true }
arrow-cast = { workspace = true, optional = true }
arrow-ord = { workspace = true, optional = true }
arrow-row = { workspace = true, optional = true }
arrow-schema = { workspace = true, optional = true }
arrow-select = { workspace = true, optional = true }
parquet = { workspace = true, features = [
    "async",
    "object_store",
], optional = true }

# datafusion
datafusion = { workspace = true, optional = true }
datafusion-expr = { workspace = true, optional = true }
datafusion-common = { workspace = true, optional = true }
datafusion-proto = { workspace = true, optional = true }
datafusion-sql = { workspace = true, optional = true }
datafusion-physical-expr = { workspace = true, optional = true }

# serde
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

# "stdlib"
bytes = { workspace = true }
chrono = { workspace = true, default-features = false, features = ["clock"] }
regex = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true, features = ["serde", "v4"] }
url = { workspace = true }

# runtime
async-trait = { workspace = true }
futures = { workspace = true }
num_cpus = { workspace = true }
tokio = { workspace = true, features = [
    "macros",
    "rt",
    "rt-multi-thread",
    "sync",
    "fs",
    "parking_lot",
] }

# other deps (these should be organized and pulled into workspace.dependencies as necessary)
cfg-if = "1"
datafusion-objectstore-hdfs = { version = "0.1.3", default-features = false, features = [
    "hdfs3",
    "try_spawn_blocking",
], optional = true }
errno = "0.3"
itertools = "0.11"
lazy_static = "1"
log = "0"
libc = ">=0.2.90, <1"
num-bigint = "0.4"
num-traits = "0.2.15"
object_store = "0.6.1"
once_cell = "1.16.0"
parking_lot = "0.12"
parquet2 = { version = "0.17", optional = true }
percent-encoding = "2"

# S3 lock client
rusoto_core = { version = "0.47", default-features = false, optional = true }
rusoto_credential = { version = "0.47", optional = true }
rusoto_sts = { version = "0.47", default-features = false, optional = true }
rusoto_dynamodb = { version = "0.47", default-features = false, optional = true }

# Glue
rusoto_glue = { version = "0.47", default-features = false, optional = true }

# Unity
reqwest = { version = "0.11.18", default-features = false, features = [
    "rustls-tls",
    "json",
], optional = true }
reqwest-middleware = { version = "0.2.1", optional = true }
reqwest-retry = { version = "0.2.2", optional = true }

# Datafusion
dashmap = { version = "5", optional = true }

sqlparser = { version = "0.35", optional = true }

# NOTE dependencies only for integration tests
fs_extra = { version = "1.2.0", optional = true }
tempdir = { version = "0", optional = true }

dynamodb_lock = { version = "0", default-features = false, optional = true }

[dev-dependencies]
dotenvy = "0"
maplit = "1"
pretty_assertions = "1.2.1"
rand = "0.8"
serial_test = "2"
tempdir = "0"
tempfile = "3"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
utime = "0.3"

[features]
azure = ["object_store/azure"]
arrow = [
    "dep:arrow",
    "arrow-array",
    "arrow-cast",
    "arrow-ord",
    "arrow-row",
    "arrow-schema",
    "arrow-select",
    "arrow-buffer",
]
default = ["arrow", "parquet"]
datafusion = [
    "dep:datafusion",
    "datafusion-expr",
    "datafusion-common",
    "datafusion-proto",
    "datafusion-physical-expr",
    "datafusion-sql",
    "sqlparser",
    "arrow",
    "parquet",
    "dashmap",
]
datafusion-ext = ["datafusion"]
gcs = ["object_store/gcp"]
glue = ["s3", "rusoto_glue/rustls"]
glue-native-tls = ["s3-native-tls", "rusoto_glue"]
hdfs = ["datafusion-objectstore-hdfs"]
# used only for integration testing
integration_test = ["fs_extra", "tempdir"]
json = ["parquet/json"]
python = ["arrow/pyarrow"]
s3-native-tls = [
    "rusoto_core/native-tls",
    "rusoto_credential",
    "rusoto_sts/native-tls",
    "rusoto_dynamodb/native-tls",
    "dynamodb_lock/native-tls",
    "object_store/aws",
]
s3 = [
    "rusoto_core/rustls",
    "rusoto_credential",
    "rusoto_sts/rustls",
    "rusoto_dynamodb/rustls",
    "dynamodb_lock/rustls",
    "object_store/aws",
]
unity-experimental = ["reqwest", "reqwest-middleware", "reqwest-retry"]

[[bench]]
name = "read_checkpoint"
harness = false

[[example]]
name = "basic_operations"
required-features = ["datafusion"]

[[example]]
name = "recordbatch-writer"
required-features = ["arrow"]
