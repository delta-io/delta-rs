[package]
name = "deltalake-catalog-unity"
version = "0.8.0"
authors.workspace = true
keywords.workspace = true
readme.workspace = true
edition.workspace = true
homepage.workspace = true
description.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

[dependencies]
async-trait.workspace = true
tokio.workspace = true
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
futures.workspace = true
chrono.workspace = true
tracing.workspace = true
deltalake-core = { version = "0.24.0", path = "../core", features = [
    "datafusion",
] }
deltalake-aws = { version = "0.7.0", path = "../aws", optional = true }
deltalake-azure = { version = "0.7.0", path = "../azure", optional = true }
deltalake-gcp = { version = "0.8.0", path = "../gcp", optional = true }
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls", "json", "http2"] }
reqwest-retry = "0.7"
reqwest-middleware = { version = "0.4.0", features = ["json"] }
rand = "0.8"
dashmap = "6"
datafusion = { workspace = true, optional = true }
datafusion-common = { workspace = true, optional = true }
moka = { version = "0.12", optional = true, features = ["future"] }

[dev-dependencies]
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
tempfile = "3"
httpmock = { version = "0.8.0-alpha.1" }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
default = ["datafusion", "aws"]
aws = ["deltalake-aws"]
azure = ["deltalake-azure"]
gcp = ["deltalake-gcp"]
r2 = ["deltalake-aws"]
datafusion = ["dep:datafusion", "datafusion-common", "deltalake-core/datafusion", "moka"]

[[example]]
name = "uc_example"
path = "examples/uc_example.rs"
required-features = ["datafusion", "aws"]

