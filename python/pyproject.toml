[build-system]
requires = ["maturin==0.13.2"]
build-backend = "maturin"

[project]
name = "deltalake"
description = "Native Delta Lake Python binding based on delta-rs with Pandas integration"
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.7"
keywords = ["deltalake", "delta", "datalake", "pandas", "arrow"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only"
]
dependencies = [
    "pyarrow>=7",
    'typing-extensions;python_version<"3.8"',
]

[project.optional-dependencies]
pandas = [
    "pandas"
]
devel = [
    "mypy",
    "black",
    "isort",
    "packaging>=20",
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "pytest-timeout",
    "sphinx<=4.5",
    "sphinx-rtd-theme",
    "toml"
]
pyspark = [
    "pyspark",
    "delta-spark"
]

[project.urls]
documentation = "https://delta-io.github.io/delta-rs/python/"
repository = "https://github.com/delta-io/delta-rs"

[tool.mypy]
files = "deltalake/*.py"
exclude = "^tests"
mypy_path = "./stubs"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false
implicit_reexport = true
strict_equality = true

[tool.isort]
profile = "black"
src_paths = ["deltalake", "tests"]

[tool.black]
include = '\.pyi?$'
exclude = "venv"

[tool.pytest.ini_options]
addopts = "--cov=deltalake -v -m 'not integration'"
testpaths = [
    "tests",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "s3: marks tests as integration tests with S3 (deselect with '-m \"not s3\"')",
    "pandas: marks tests that require pandas",
    "pyspark: marks tests that require pyspark",
]