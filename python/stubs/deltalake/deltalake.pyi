from typing import Any, Callable, List, Tuple

import pyarrow as pa

from deltalake.writer import AddAction

RawDeltaTable: Any
rust_core_version: Callable[[], str]

class DeltaStorageFsBackend:
    def __new__(cls, table_uri: str) -> DeltaStorageFsBackend: ...
    def get_type_name(self) -> str: ...
    def normalize_path(self, path: str) -> str: ...
    def head_obj(self, path: str) -> Tuple[str, str]: ...
    def get_obj(self, path: str) -> bytes: ...
    def get_file_info_selector(self, selector: FileSelector) -> List[FileInfo]: ...

def write_new_deltalake(
    table_uri: str,
    schema: pa.Schema,
    add_actinos: List[AddAction],
    _mode: str,
    partition_by: List[str],
) -> None: ...

class PyDeltaTableError(BaseException): ...

fs_backends = Literal["local", "S3", "GCS", "ADLS"]

class FileSystem():
    def __new__(backend: fs_backends, config: Dict[str, str]) -> FileSystem: ...
    @classmethod
    def from_uri(uri: str, config: Dict[str, str]) -> FileSystem: ...
    @classmethod
    def from_pyarrow(fs: pyarrow.FileSystem) -> FileSystem: ...
    def to_pyarrow(self) -> pyarrow.FileSystem: ...
    @property
    def backend(self) -> fs_backends: ...
    @property
    def config(self) -> Dict[str, str]: ...
