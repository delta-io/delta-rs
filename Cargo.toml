[workspace]
members = ["crates/*", "delta-inspect", "python"]
exclude = ["proofs"]
resolver = "2"

[workspace.package]
authors = ["Qingping Hou <dave2008713@gmail.com>"]
rust-version = "1.81"
keywords = ["deltalake", "delta", "datalake"]
readme = "README.md"
edition = "2021"
description = "Native Delta Lake implementation in Rust"
homepage = "https://github.com/delta-io/delta.rs"
license = "Apache-2.0"
documentation = "https://docs.rs/deltalake"
repository = "https://github.com/delta-io/delta.rs"

[profile.release-with-debug]
inherits = "release"
debug = true

# Reducing the debuginfo for the test profile in order to trim the disk and RAM
# usage during development
# <https://github.com/delta-io/delta-rs/issues/1550?
[profile.test]
debug = "line-tables-only"

[workspace.dependencies]
delta_kernel = { version = "=0.6.1", features = ["default-engine-rustls"] }
#delta_kernel = { path = "../delta-kernel-rs/kernel", features = ["sync-engine"]  }

# arrow
arrow = { version = "54" }
arrow-arith = { version = "54" }
arrow-array = { version = "54", features = ["chrono-tz"] }
arrow-buffer = { version = "54" }
arrow-cast = { version = "54" }
arrow-ipc = { version = "54" }
arrow-json = { version = "54" }
arrow-ord = { version = "54" }
arrow-row = { version = "54" }
arrow-schema = { version = "54" }
arrow-select = { version = "54" }
object_store = { version = "0.11.2" , features = ["cloud"]}
parquet = { version = "54" }

# datafusion
datafusion = "45"
datafusion-expr = "45"
datafusion-common = "45"
datafusion-ffi = "45"
datafusion-functions = "45"
datafusion-functions-aggregate = "45"
datafusion-physical-expr = "45"
datafusion-physical-plan = "45"
datafusion-proto = "45"
datafusion-sql = "45"

# serde
serde = { version = "1.0.194", features = ["derive"] }
serde_json = "1"
strum = { version = "0.26"}


# "stdlib"
bytes = { version = "1" }
chrono = { version = "=0.4.39", default-features = false, features = ["clock"] }
tracing = { version = "0.1", features = ["log"] }
regex = { version = "1" }
thiserror = { version = "2" }
url = { version = "2" }
urlencoding = "2.1.3"
uuid = { version = "1" }

# runtime / async
async-trait = { version = "0.1" }
futures = { version = "0.3" }
tokio = { version = "1" }
num_cpus = { version = "1" }

