[workspace]
members = ["crates/*", "delta-inspect", "python"]
exclude = ["proofs"]
resolver = "2"

[workspace.package]
authors = ["Qingping Hou <dave2008713@gmail.com>"]
rust-version = "1.86"
keywords = ["deltalake", "delta", "datalake"]
readme = "README.md"
edition = "2021"
description = "Native Delta Lake implementation in Rust"
homepage = "https://github.com/delta-io/delta.rs"
license = "Apache-2.0"
documentation = "https://docs.rs/deltalake"
repository = "https://github.com/delta-io/delta.rs"

[profile.release-with-debug]
inherits = "release"
debug = true

# Reducing the debuginfo for the test profile in order to trim the disk and RAM
# usage during development
# <https://github.com/delta-io/delta-rs/issues/1550?
[profile.test]
debug = "line-tables-only"

[workspace.dependencies]
delta_kernel = { version = "0.16.0", features = [
    "arrow-56",
    "default-engine-rustls",
    "internal-api",
] }


# arrow
arrow = { version = "56.2" }
arrow-arith = { version = "56.2" }
arrow-array = { version = "56.2", features = ["chrono-tz"] }
arrow-buffer = { version = "56.2" }
arrow-cast = { version = "56.2" }
arrow-ipc = { version = "56.2" }
arrow-json = { version = "56.2" }
arrow-ord = { version = "56.2" }
arrow-row = { version = "56.2" }
arrow-schema = { version = "56.2" }
arrow-select = { version = "56.2" }
object_store = { version = "0.12.1" }
parquet = { version = "56.2" }

# datafusion
datafusion = "50.2"
datafusion-ffi = "50.2"
datafusion-proto = "50.2"

# serde
serde = { version = "1.0.194", features = ["derive"] }
serde_json = "1"
strum = { version = "0.27" }

# "stdlib"
bytes = { version = "1" }
chrono = { version = "0.4.40", default-features = false, features = ["clock"] }
tracing = { version = "0.1", features = ["log"] }
regex = { version = "1" }
thiserror = { version = "2" }
url = { version = "2" }
percent-encoding-rfc3986 = { version = "0.1.3" }
tempfile = { version = "3" }
uuid = { version = "1" }

# runtime / async
async-trait = { version = "0.1" }
futures = { version = "0.3" }
tokio = { version = "1" }

# opentelemetry
tracing-opentelemetry = { version = "0.32" }
opentelemetry = { version = "0.31" }
opentelemetry-otlp = { version = "0.31", features = ["http-proto"] }
opentelemetry_sdk = { version = "0.31", features = ["rt-tokio"] }
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
num_cpus = { version = "1" }

[workspace.metadata.typos]
files.extend-exclude = ["CHANGELOG.md", "crates/benchmarks/queries/tpcds/*.sql"]
default.extend-ignore-re = [
    # Custom ignore regex patterns: https://github.com/crate-ci/typos/blob/master/docs/reference.md#example-configurations
    "(?s)//\\s*spellchecker:ignore-next-line[^\\n]*\\n[^\\n]*",
    # Line block with # spellchecker:<on|off>
    "(?s)(#|//|<\\!--)\\s*spellchecker:off.*?\\n\\s*(#|//|<\\!--)\\s*spellchecker:on",
    "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$",
    # workaround for: https://github.com/crate-ci/typos/issues/850
    "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
]

[workspace.metadata.typos.default.extend-words]
arro = "arro"
Arro = "Arro"
arro3 = "arro3"
Arro3 = "Arro3"
AKS = "AKS"
# to avoid using 'type' as a field name.
tpe = "tpe"

# for better flamegraphs when benchmarking
[profile.bench]
debug = true

[profile.profiling]
inherits = "release"
debug = true
