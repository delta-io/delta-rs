name: python_build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ./python

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # the whole target dir is over 400MB cache limit, so we have to split up
    # the cache step to avoid caching deps dir
    - name: Cache Rust build
      uses: actions/cache@v1.0.1
      with:
        path: target/debug/build
        key: python-${{ runner.OS }}-target-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          python-${{ runner.OS }}-target-build-
    - name: Cache Rust incremental build
      uses: actions/cache@v1.0.1
      with:
        path: target/debug/incremental
        key: python-${{ runner.OS }}-target-incremental-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          python-${{ runner.OS }}-target-incremental-

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Setup virtualenv
      run: |
        pip install virtualenv
        virtualenv venv

    - name: 'Install Python devel headers'
      run: sudo apt install -y python3-dev

    - name: Install minimal nightly with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: nightly
        override: true
    - name: Check
      run: cargo clippy
    - name: Build
      run: cargo build
    # - name: Run Rust tests
    #   run: cargo test

    - name: 'Install Python build Dependencies'
      run: pip install maturin

    - name: Run Python tests
      run: |
        source venv/bin/activate
        # disable manylinux audit checks for test builds
        maturin build --manylinux off
        ls -lh ../target/wheels
        PY_MINOR_VER=$(python -V | cut -d. -f 2)
        pip install $(printf ../target/wheels/deltalake_python-*-cp3${PY_MINOR_VER}-*.whl)'[devel,pandas]'
        py.test tests
