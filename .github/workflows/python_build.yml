name: python_build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ./python

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Check Python
      run: |
        pip install black isort mypy types-dataclasses
        make check-python
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Check Rust
      run: make check-rust

  test-minimal:
    name: Python Build (Python 3.7 PyArrow 4.0.0)
    runs-on: ubuntu-latest
    # use the same environment we have for python release
    container: quay.io/pypa/manylinux2010_x86_64:2022-03-14-b2cd80b
    steps:
    # actions/checkout@v2 is a node action, which runs on a fairly new
    # version of node. however, manylinux environment's glibc is too old for
    # that version of the node. so we will have to use v1 instead, which is a
    # docker based action.
    - uses: actions/checkout@v1

    # Require for building openssl-sys
    - name: Install perl-IPC/Cmd
      run: yum install -y perl-IPC-Cmd

    # actions-rs/toolchain@v1 is a node action, which runs on a fairly new
    # version of node. however, manylinux environment's glibc is too old for
    # that version of the node. so we will have to install rust manually here.
    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        $HOME/.cargo/bin/rustup default stable
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Enable manylinux Python targets
      run: echo "/opt/python/cp37-cp37m/bin" >> $GITHUB_PATH

    - name: Build and install deltalake
      run: |
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        make setup
        # Install minimum PyArrow version
        pip install pyarrow==4.0.0
        make develop

    - name: Run tests
      run: |
        source venv/bin/activate
        make unit-test

    # - name: Run Integration tests
    #   run: |
    #     py.test --cov tests -m integration


  test:
    name: Python Build (Python 3.10 PyArrow latest)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10' 

    - name: Build and install deltalake
      run: |
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        make develop

    - name: Run tests
      run: |
        source venv/bin/activate
        make unit-test

    - name: Build Sphinx documentation
      run: |
        source venv/bin/activate
        make build-documentation
