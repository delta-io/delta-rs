name: Cleanup PR Caches

on:
  pull_request_target:
    types:
      - closed

jobs:
  cleanup:
    name: Cleanup PR Caches
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    permissions:
      actions: write
    steps:
      - name: Cleanup PR Caches
        run: |
          echo "Cleaning up caches for closed PR #${{ github.event.pull_request.number }}"

          # Get cache keys for this PR branch (limit to 100 to prevent timeout)
          cacheKeysForPR=$(gh cache list --ref $BRANCH --limit 100 --json id --jq '.[].id' 2>/dev/null || echo "")

          # Count the number of caches
          cacheCount=$(echo "$cacheKeysForPR" | wc -w)
          echo "Found $cacheCount cache entries for branch: $BRANCH"

          if [ "$cacheCount" -eq 0 ]; then
            echo "No caches found for this PR branch"
            exit 0
          fi

          # Setting this to not fail the workflow while deleting cache keys
          set +e

          echo "Deleting caches..."
          deletedCount=0
          failedCount=0

          for cacheKey in $cacheKeysForPR; do
            if gh cache delete $cacheKey; then
              deletedCount=$((deletedCount + 1))
              echo "✅ Deleted cache: $cacheKey"
            else
              failedCount=$((failedCount + 1))
              echo "❌ Failed to delete cache: $cacheKey"
            fi
          done

          echo "Cache cleanup completed:"
          echo "  - Successfully deleted: $deletedCount"
          echo "  - Failed to delete: $failedCount"
          echo "  - Total processed: $((deletedCount + failedCount))"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          BRANCH: refs/pull/${{ github.event.pull_request.number }}/merge
