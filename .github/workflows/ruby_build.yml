name: ruby_build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # the whole target dir is over 400MB cache limit, so we have to split up
    # the cache step to avoid caching deps dir
    - name: Cache Rust build
      uses: actions/cache@v1.0.1
      with:
        path: target/release/build
        key: ruby-${{ runner.OS }}-target-release-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ruby-${{ runner.OS }}-target-build-
    - name: Cache Rust incremental build
      uses: actions/cache@v1.0.1
      with:
        path: target/release/incremental
        key: ruby-${{ runner.OS }}-target-release-incremental-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ruby-${{ runner.OS }}-target-incremental-
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Build Release for Ruby
      run: cargo build --release
    - name: 'Set up Ruby'
      uses: actions/setup-ruby@v1
    - name: 'Install Ruby Dependencies'
      run: '(cd ruby && bundle install --path vendor/bundle)'
    - name: 'Test Ruby'
      run: '(cd ruby && bundle exec rake spec)'
