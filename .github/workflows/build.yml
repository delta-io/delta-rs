name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    working-directory: ./rust

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Format
      run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-10.15
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: build and lint with clippy
      run: cargo clippy --features azure,datafusion-ext,s3
    - name: Spot-check build for rustls features
      run: cargo clippy --features s3-rustls

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-10.15
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Run tests
      run: cargo test --verbose --features datafusion-ext,azure

  s3_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - name: Setup localstack
        run: docker-compose up setup
      - name: Run tests
        # As there's no way to run tests which are feature only, one should explicitly tell which tests to execute.
        # Using `cargo test s3` requires tests to include _s3_ part in a name which is easily human error prone.
        run: |
         cargo test s3 --test simple_commit_test --features s3
         cargo test s3 --test dynamodb_lock_test --features s3
         cargo test s3 --test concurrent_writes_test --features s3
         cargo test s3 --test repair_s3_rename_test --features s3
