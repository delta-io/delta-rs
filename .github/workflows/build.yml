name: build

on:
  push:
    branches: [ main, 'rust-v*' ]
  pull_request:
    branches: [ main, 'rust-v*']

defaults:
  run:
    working-directory: ./rust

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Format
      run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-10.15
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          ${{ runner.os }}-cargo-
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: build and lint with clippy
      run: cargo clippy --features azure,datafusion-ext,s3
    - name: Spot-check build for rustls features
      run: cargo clippy --features s3-rustls

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-10.15
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: test-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
        restore-keys: |
          test-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          test-${{ runner.os }}-cargo-
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Run tests
      #run: cargo test --verbose --features datafusion-ext,azure Comment out datafusion until https://github.com/apache/arrow-datafusion/pull/984 is merged
      run: cargo test --verbose --features azure

  s3_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: s3-test-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
        restore-keys: |
          s3-test-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
          s3-test-${{ runner.os }}-cargo-
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: stable
        override: true
    - name: Setup localstack
      run: docker-compose up setup
    - name: Run tests
      run: |
       cargo test --features s3
